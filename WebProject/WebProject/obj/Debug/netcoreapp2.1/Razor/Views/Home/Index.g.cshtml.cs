#pragma checksum "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "caa6c48f4ba9b6dad55cbbdd0cea7968c2e0038f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\_ViewImports.cshtml"
using WebProject;

#line default
#line hidden
#line 2 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\_ViewImports.cshtml"
using WebProject.Models;

#line default
#line hidden
#line 3 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#line 4 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\_ViewImports.cshtml"
using WebProject.Autentication;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"caa6c48f4ba9b6dad55cbbdd0cea7968c2e0038f", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bb7add11c7347f67bd90162947762a8902cdb1f8", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 140, true);
            WriteLiteral("\r\n\r\n<div class=\"container-fluid\" style=\"padding-top: 20px;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-18 col-md-12\">\r\n            ");
            EndContext();
            BeginContext(187, 2314, false);
#line 9 "C:\Users\gianl\OneDrive\Desktop\OraleFinsa\WebProject\WebProject\Views\Home\Index.cshtml"
        Write(Html.Kendo().Grid<WebProject.Models.Order>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.OrderID).Hidden().Filterable(false);
                    columns.Bound(p => p.Freight);
                    columns.Bound(p => p.OrderDate).Format("{0:dd/MM/yyyy}").Sortable(true);
                    columns.Bound(p => p.ShipName);
                    columns.Bound(p => p.ShipCity);
                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(172);

                })
                .ToolBar(toolbar => { toolbar.Create(); toolbar.Excel(); toolbar.Pdf(); })
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                .Pageable()
                .Sortable()
                .Scrollable()
                .Filterable()
                .Excel(excel =>excel
                    .FileName("Excel.xlsx")
                    .Filterable(true)
                    .AllPages(true)
                    .ProxyURL(Url.Action("Orders_Export_Excel", "Excel"))
                                                                    
                )
                .Pdf(pdf => pdf
                    .AllPages()
                    .AvoidLinks()
                    .PaperSize("A4")
                    .Scale(0.8)
                    .Margin("2cm", "1cm", "1cm", "1cm")
                    .Landscape()
                    .RepeatHeaders()
                    .TemplateId("page-template")
                    .FileName("Pdf.pdf")
                    .ProxyURL(Url.Action("Orders_Export_Pdf", "Grid"))
                    )
                .HtmlAttributes(new { style = "height:550px;" })
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)

                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => (p.OrderID)))
                .Create(update => update.Action("Orders_Create", "Grid"))
                .Read(read => read.Action("Orders_Read", "Grid"))
                .Update(update => update.Action("Orders_Update", "Grid"))
                .Destroy(update => update.Action("Orders_Destroy", "Grid"))
                )
            );

#line default
#line hidden
            EndContext();
            BeginContext(2502, 1260, true);
            WriteLiteral(@"

            <div class=""col-xs-10 col-md-3"">
                <h2>&nbsp;</h2>

            </div>


            <script>
                var grid = $(""#grid"").data(""kendoGrid"");
            </script>

            <script type=""text/javascript"">

                function error_handler(e) {
                    if (e.errors) {
                        var message = ""Errors:\n"";
                        $.each(e.errors, function (key, value) {
                            if ('errors' in value) {
                                $.each(value.errors, function () {
                                    message += this + ""\n"";
                                });
                            }
                        });
                        alert(message);
                    }
                }
            </script>
        </div>
    </div>
</div>

<style>
    .k-button.k-button-icontext.k-grid-edit {
        background-color: forestgreen;
        color: white;
    }

    .k-butt");
            WriteLiteral("on.k-button-icontext.k-grid-delete {\r\n        background-color: cornflowerblue;\r\n        color: white;\r\n    }\r\n\r\n    .k-button.k-button-icontext.k-grid-cancel {\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n</style>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
